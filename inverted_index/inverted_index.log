DEBUG:__main__:Namespace(callback=<function callback_query at 0x7f743114f680>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
INFO:__main__:load inverted index inverted.index
DEBUG:__main__:query inverted index with request ['one', 'apple']
DEBUG:__main__:query inverted index with request ['two', 'tree']
DEBUG:__main__:query inverted index with request ['кодировка', 'utf-8']
DEBUG:__main__:Namespace(callback=<function callback_query at 0x7f2e0d097680>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='query_utf8.txt' mode='r' encoding='cp1251'>, query_list=None)
INFO:__main__:load inverted index inverted.index
DEBUG:__main__:query inverted index with request ['one', 'apple']
DEBUG:__main__:query inverted index with request ['two', 'tree']
DEBUG:__main__:query inverted index with request ['РєРѕРґРёСЂРѕРІРєР°', 'utf-8']
DEBUG:__main__:Namespace(callback=<function callback_query at 0x7fca62ac8680>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
INFO:__main__:load inverted index inverted.index
DEBUG:__main__:query inverted index with request ['one', 'apple']
DEBUG:__main__:query inverted index with request ['two', 'tree']
DEBUG:__main__:query inverted index with request ['кодировка', 'utf-8']
DEBUG:inverted_index:Namespace(callback=<function callback_query at 0x7f7f389ac680>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
INFO:inverted_index:load inverted index inverted.index
DEBUG:inverted_index:query inverted index with request ['one', 'apple']
DEBUG:inverted_index:query inverted index with request ['two', 'tree']
DEBUG:inverted_index:query inverted index with request ['кодировка', 'utf-8']
2020-11-27 00:10:26 DEBUG Namespace(callback=<function callback_query at 0x7f93c7727680>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 00:10:26 INFO load inverted index inverted.index
2020-11-27 00:10:29 DEBUG query inverted index with request ['one', 'apple']
2020-11-27 00:10:29 DEBUG query inverted index with request ['two', 'tree']
2020-11-27 00:10:29 DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 00:21:24 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fc12c3da440>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 00:21:24 DEBUG Namespace(callback=<function callback_query at 0x7fc12c3da440>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 00:21:24 inverted_index INFO load inverted index inverted.index
2020-11-27 00:21:24 INFO load inverted index inverted.index
2020-11-27 00:21:27 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 00:21:27 DEBUG query inverted index with request ['one', 'apple']
2020-11-27 00:21:27 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 00:21:27 DEBUG query inverted index with request ['two', 'tree']
2020-11-27 00:21:27 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 00:21:27 DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 00:22:56 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fd29af93680>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 00:22:56 inverted_index INFO load inverted index inverted.index
2020-11-27 00:22:59 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 00:22:59 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 00:22:59 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 21:04:00 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f99572b3710>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 21:04:00 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f99572b3710>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 21:04:00 inverted_index INFO load inverted index inverted.index
2020-11-27 21:04:00 inverted_index INFO load inverted index inverted.index
2020-11-27 21:04:03 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 21:04:03 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 21:04:03 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 21:04:03 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 21:04:03 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 21:04:03 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 21:59:53 root DEBUG Namespace(callback=<function callback_query at 0x7fe107af0d40>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 21:59:53 root INFO load inverted index inverted.index
2020-11-27 21:59:56 root DEBUG query inverted index with request ['one', 'apple']
2020-11-27 21:59:56 root DEBUG query inverted index with request ['two', 'tree']
2020-11-27 21:59:56 root DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 22:01:55 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fe736e28d40>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 22:01:55 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fe736e28d40>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 22:01:55 inverted_index INFO load inverted index inverted.index
2020-11-27 22:01:55 inverted_index INFO load inverted index inverted.index
2020-11-27 22:01:57 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 22:01:57 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 22:01:57 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 22:01:57 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 22:01:57 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 22:01:57 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 22:03:24 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f79d8bcdd40>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 22:03:24 inverted_index INFO load inverted index inverted.index
2020-11-27 22:03:27 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 22:03:27 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 22:03:27 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 22:13:41 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f78b871ad40>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='cp1251'>, query_list=None)
2020-11-27 22:13:41 inverted_index INFO load inverted index inverted.index
2020-11-27 22:13:43 inverted_index DEBUG query inverted index with request ['one', 'apple']
2020-11-27 22:13:43 inverted_index DEBUG query inverted index with request ['two', 'tree']
2020-11-27 22:13:43 inverted_index DEBUG query inverted index with request ['кодировка', 'utf-8']
2020-11-27 23:28:57 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7ff5655cbd40>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='./stop_words_en.txt')
2020-11-27 23:28:57 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-27 23:28:57 inverted_index INFO loading documents to build inverted index
2020-11-27 23:28:57 inverted_index INFO loading stop words
2020-11-27 23:28:57 inverted_index INFO building inverted index for provided documents
2020-11-27 23:30:33 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7f7739825d40>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='./stop_words_en.txt')
2020-11-27 23:30:33 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-27 23:30:33 inverted_index INFO loading documents to build inverted index
2020-11-27 23:30:33 inverted_index INFO loading stop words
2020-11-27 23:30:33 inverted_index INFO building inverted index for provided documents
2020-11-27 23:33:01 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7fc3a3814d40>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='stop_words_en.txt')
2020-11-27 23:33:01 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-27 23:33:01 inverted_index INFO loading documents to build inverted index
2020-11-27 23:33:01 inverted_index INFO loading stop words
2020-11-27 23:33:01 inverted_index INFO building inverted index for provided documents
2020-11-27 23:35:04 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f1d712d3e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['one', 'table'], ['plan', 'little']])
2020-11-27 23:35:04 inverted_index INFO load inverted index inverted.index
2020-11-27 23:35:07 inverted_index DEBUG query inverted index with request ['one', 'table']
2020-11-27 23:35:07 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-27 23:35:41 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fb51a92be60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['one', 'tool'], ['plan', 'little']])
2020-11-27 23:35:41 inverted_index INFO load inverted index inverted.index
2020-11-27 23:35:43 inverted_index DEBUG query inverted index with request ['one', 'tool']
2020-11-27 23:35:43 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-27 23:36:02 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f4e58c98e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']])
2020-11-27 23:36:02 inverted_index INFO load inverted index inverted.index
2020-11-27 23:36:05 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-27 23:36:05 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:48:55 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f8c403d7ef0>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=0)
2020-11-28 12:48:55 inverted_index INFO load inverted index inverted.index
2020-11-28 12:48:58 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:48:58 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:49:52 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7ff4701bde60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=0)
2020-11-28 12:49:52 inverted_index INFO load inverted index inverted.index
2020-11-28 12:49:55 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:49:55 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:51:05 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f74af410e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=3)
2020-11-28 12:51:05 inverted_index INFO load inverted index inverted.index
2020-11-28 12:51:08 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:51:08 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:52:02 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fc408e7ce60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 12:52:02 inverted_index INFO load inverted index inverted.index
2020-11-28 12:52:05 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:52:05 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:52:59 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7fe56b680d40>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='stop_words_en.txt', verbocity=0)
2020-11-28 12:52:59 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-28 12:52:59 inverted_index INFO loading documents to build inverted index
2020-11-28 12:52:59 inverted_index INFO loading stop words
2020-11-28 12:52:59 inverted_index INFO building inverted index for provided documents
2020-11-28 12:53:49 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fd66b8a2e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=3)
2020-11-28 12:53:49 inverted_index INFO load inverted index inverted.index
2020-11-28 12:53:52 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:53:52 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:54:21 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f7618e4fe60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=3)
2020-11-28 12:54:21 inverted_index INFO load inverted index inverted.index
2020-11-28 12:54:24 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:54:24 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:55:12 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fad75557e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=3)
2020-11-28 12:55:12 inverted_index INFO load inverted index inverted.index
2020-11-28 12:55:15 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:55:15 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:55:30 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f3dc35dce60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=2)
2020-11-28 12:55:30 inverted_index INFO load inverted index inverted.index
2020-11-28 12:55:32 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:55:32 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:55:44 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f0ed358ee60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 12:55:44 inverted_index INFO load inverted index inverted.index
2020-11-28 12:55:47 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:55:47 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 12:59:50 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7ff9ed933e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 12:59:50 inverted_index INFO load inverted index inverted.index
2020-11-28 12:59:52 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 12:59:52 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:00:29 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fe6cdd95e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 13:00:29 inverted_index INFO load inverted index inverted.index
2020-11-28 13:00:32 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:00:32 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:00:47 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f139291cef0>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 13:00:47 inverted_index INFO load inverted index inverted.index
2020-11-28 13:00:50 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:00:50 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:02:32 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7ff86182bef0>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 13:02:32 inverted_index INFO load inverted index inverted.index
2020-11-28 13:02:34 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:02:34 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:03:22 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7fd0d1d01ef0>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 13:03:22 inverted_index INFO load inverted index inverted.index
2020-11-28 13:03:25 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:03:25 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:04:01 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f7e822cbef0>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 13:04:01 inverted_index INFO load inverted index inverted.index
2020-11-28 13:04:04 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:04:04 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:04:57 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7febbfedce60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=3)
2020-11-28 13:04:57 inverted_index INFO load inverted index inverted.index
2020-11-28 13:04:59 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:04:59 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:05:03 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f2c09f8fe60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=2)
2020-11-28 13:05:03 inverted_index INFO load inverted index inverted.index
2020-11-28 13:05:06 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:05:06 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:05:20 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f64513e5e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=1)
2020-11-28 13:05:20 inverted_index INFO load inverted index inverted.index
2020-11-28 13:05:23 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:05:23 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:05:29 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7efcaa2d0e60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=0)
2020-11-28 13:05:29 inverted_index INFO load inverted index inverted.index
2020-11-28 13:05:31 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:05:31 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:06:37 inverted_index DEBUG Namespace(callback=<function callback_query at 0x7f9a11e2de60>, inverted_index_path='inverted.index', query_file=<_io.TextIOWrapper name='<stdin>' encoding='utf-8'>, query_list=[['usually', 'tool'], ['plan', 'little']], verbocity=0)
2020-11-28 13:06:37 inverted_index INFO load inverted index inverted.index
2020-11-28 13:06:40 inverted_index DEBUG query inverted index with request ['usually', 'tool']
2020-11-28 13:06:40 inverted_index DEBUG query inverted index with request ['plan', 'little']
2020-11-28 13:07:22 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7efd856d5dd0>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='stop_words_en.txt', verbocity=0)
2020-11-28 13:07:22 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-28 13:07:22 inverted_index INFO loading documents to build inverted index
2020-11-28 13:07:22 inverted_index INFO loading stop words
2020-11-28 13:07:22 inverted_index INFO building inverted index for provided documents
2020-11-28 13:07:34 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7f9062810dd0>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='stop_words_en.txt', verbocity=1)
2020-11-28 13:07:34 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-28 13:07:34 inverted_index INFO loading documents to build inverted index
2020-11-28 13:07:35 inverted_index INFO loading stop words
2020-11-28 13:07:35 inverted_index INFO building inverted index for provided documents
2020-11-28 13:07:46 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7f9c8934bdd0>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='stop_words_en.txt', verbocity=2)
2020-11-28 13:07:46 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-28 13:07:46 inverted_index INFO loading documents to build inverted index
2020-11-28 13:07:46 inverted_index INFO loading stop words
2020-11-28 13:07:46 inverted_index INFO building inverted index for provided documents
2020-11-28 13:08:03 inverted_index DEBUG Namespace(callback=<function callback_build at 0x7f7ee0f65dd0>, dataset_path='wikipedia_sample', output='inverted.index', stop_words='stop_words_en.txt', verbocity=3)
2020-11-28 13:08:03 inverted_index DEBUG call build with: wikipedia_sample and inverted.index
2020-11-28 13:08:03 inverted_index INFO loading documents to build inverted index
2020-11-28 13:08:03 inverted_index INFO loading stop words
2020-11-28 13:08:03 inverted_index INFO building inverted index for provided documents
